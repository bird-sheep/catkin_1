// Generated by gencpp from file multyply_pkg/multiply.msg
// DO NOT EDIT!


#ifndef MULTYPLY_PKG_MESSAGE_MULTIPLY_H
#define MULTYPLY_PKG_MESSAGE_MULTIPLY_H

#include <ros/service_traits.h>


#include <multyply_pkg/multiplyRequest.h>
#include <multyply_pkg/multiplyResponse.h>


namespace multyply_pkg
{

struct multiply
{

typedef multiplyRequest Request;
typedef multiplyResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct multiply
} // namespace multyply_pkg


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::multyply_pkg::multiply > {
  static const char* value()
  {
    return "2b01e33a056883fbaa2d039561342da0";
  }

  static const char* value(const ::multyply_pkg::multiply&) { return value(); }
};

template<>
struct DataType< ::multyply_pkg::multiply > {
  static const char* value()
  {
    return "multyply_pkg/multiply";
  }

  static const char* value(const ::multyply_pkg::multiply&) { return value(); }
};


// service_traits::MD5Sum< ::multyply_pkg::multiplyRequest> should match
// service_traits::MD5Sum< ::multyply_pkg::multiply >
template<>
struct MD5Sum< ::multyply_pkg::multiplyRequest>
{
  static const char* value()
  {
    return MD5Sum< ::multyply_pkg::multiply >::value();
  }
  static const char* value(const ::multyply_pkg::multiplyRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::multyply_pkg::multiplyRequest> should match
// service_traits::DataType< ::multyply_pkg::multiply >
template<>
struct DataType< ::multyply_pkg::multiplyRequest>
{
  static const char* value()
  {
    return DataType< ::multyply_pkg::multiply >::value();
  }
  static const char* value(const ::multyply_pkg::multiplyRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::multyply_pkg::multiplyResponse> should match
// service_traits::MD5Sum< ::multyply_pkg::multiply >
template<>
struct MD5Sum< ::multyply_pkg::multiplyResponse>
{
  static const char* value()
  {
    return MD5Sum< ::multyply_pkg::multiply >::value();
  }
  static const char* value(const ::multyply_pkg::multiplyResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::multyply_pkg::multiplyResponse> should match
// service_traits::DataType< ::multyply_pkg::multiply >
template<>
struct DataType< ::multyply_pkg::multiplyResponse>
{
  static const char* value()
  {
    return DataType< ::multyply_pkg::multiply >::value();
  }
  static const char* value(const ::multyply_pkg::multiplyResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // MULTYPLY_PKG_MESSAGE_MULTIPLY_H
